/**
 * This file was auto-generated by the Titanium Module SDK helper for Android Appcelerator Titanium
 * Mobile Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved. Licensed under the
 * terms of the Apache Public License Please see the LICENSE included with this distribution for
 * details.
 *
 */
package com.aeroheart.ti.fortumo;


import mp.MpUtils;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.titanium.TiProperties;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;


@Kroll.module(name = "TiFortumo", id = "com.aeroheart.ti.fortumo")
public class TiFortumoModule extends KrollModule {
    // Standard Debugging variables
    protected static final String LCAT_TAG = "TiFortumoModule";
    
    public static final String EVENT_PURCHASE_COMPLETE = "purchase:complete";

    protected boolean setup;
    protected String serviceId;
    protected String serviceSecret;
    protected String appSecret;
    
    // You can define constants with @Kroll.constant, for example:
    // @Kroll.constant public static final String EXTERNAL_NAME = value;
    
    @Kroll.onAppCreate
    public static void onAppCreate(TiApplication application) {}
    
    /**
     * Note that please specify an app property in the tiapp.xml with the name
     * "com.aeroheart.ti.fortumo.properties.broadcastPermission" so that the code here can
     * reference it.
     */
    public TiFortumoModule() {
        super();
        this.reset();
        
        TiApplication application = TiApplication.getInstance();
        TiProperties  properties  = application.getAppProperties();
        String        permission  = properties.getString(
            "com.aeroheart.ti.fortumo.properties.broadcastPermission",
            "com.aeroheart.ti.fortumo.permission.PAYMENT_BROADCAST_PERMISSION"
        );
        
        BroadcastMediator.addBroadcastListener(new TiFortumoModule.BroadcastListener());
        
        MpUtils.enablePaymentBroadcast(application.getCurrentActivity(), permission.trim());
    }
    
    /*
     ***********************************************************************************************
     * Methods
     ***********************************************************************************************
     */
    @Kroll.method
    public void reset() {
        this.serviceId     = null;
        this.serviceSecret = null;
        this.appSecret     = null;
        this.setup         = false;
    }
    
    @Kroll.method
    public void setup(String serviceId, String serviceSecret, String appSecret) {
        this.serviceId     = serviceId;
        this.serviceSecret = serviceSecret;
        this.appSecret     = appSecret;
        
        this.setup = true;
    }
    
    @Kroll.method
    public void purchase(KrollDict product) {
        Activity activity = this.getActivity();
        Intent intent = new Intent(activity, PaymentActivity.class)
            .putExtra(PaymentActivity.EXTRA_PRODUCT_ID, product.getString("id"))
            .putExtra(PaymentActivity.EXTRA_PRODUCT_NAME, product.getString("name"))
            .putExtra(PaymentActivity.EXTRA_PRODUCT_TYPE, this.getTypeConstant(product.getString("type")))
            .putExtra(PaymentActivity.EXTRA_SERVICE_ID, this.serviceId)
            .putExtra(PaymentActivity.EXTRA_APP_SECRET, this.appSecret);
        
        activity.startActivity(intent);
    }
    
    protected int getTypeConstant(String type) {
        if (type.equalsIgnoreCase("consumable"))
            return MpUtils.PRODUCT_TYPE_CONSUMABLE;
        else if (type.equalsIgnoreCase("nonconsumable"))
            return MpUtils.PRODUCT_TYPE_NON_CONSUMABLE;
        else if (type.equalsIgnoreCase("subscription"))
            return MpUtils.PRODUCT_TYPE_SUBSCRIPTION;
        else
            return -1;
    }
    
    @Kroll.method
    public boolean isSetup() {
        return this.setup;
    }
    
    
    /*
     ***********************************************************************************************
     * Inner Classes
     ***********************************************************************************************
     */
    protected class BroadcastListener implements BroadcastMediator.Listener {
        public void onReceive(Context context, Intent intent) {
            LogUtils.debug(TiFortumoModule.LCAT_TAG, String.valueOf(intent.getIntExtra("billing_status", -1)));
            LogUtils.debug(TiFortumoModule.LCAT_TAG, "here!");
        }
    }
}
